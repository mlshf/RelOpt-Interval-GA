Реализация модификаций эволюционного алгоритма представляет собой модификацию программного средства RelOpt.

Для запуска необходим Python версии не ниже, чем 2.7. 
Также необходима библиотека PyQt4.

Для запуска достаточно воспользоваться командой: python RelOpt.py.

В левой части появившегося окна нужно выбрать:
# предпочитаемую версию эволюционного алгоритма
# количество запусков N
# путь к XML-файлу с настройками алгоритма
# путь к XML-файлу с характеристиками системы
# путь к CSV-файлу cо статистикой, собранной во время выполнения программы

В консоли будет выводиться лучшее решение каждого запуска в формате:
Solution Reliability Left = ..., Solution Reliability Right = ..., Solution Cost = ...
Module 0 Fault Tolerance Method: ... HW: [...] SW: [...] Reliability = [... ; ...]
...
Module n Fault Tolerance Method: ... HW: [...] SW: [...] Reliability = [... ; ...]
Где в квадратных скобках для HW и SW перечислены используемые в модуле аппаратные и программные компоненты соответственно.

CSV-файл будет содрежать данные о лучшем решении на каждом из N запусков алгоритма и статистику о минимальном, среднем и максимальном значении левой и правой границ, 
а также числа итераций по всем запускам из N.

------------------------------------------------------------------------------------------------------------------------------

XML-файл с настройками алгоритма:

В директории проекта находится файл alg.xml, являющийся настроечным.
Его следует выбирать для любого алгоритма. Лишние данные в файле будут просто проигнорированы.
# maxiter - число итераций без изменения лучшего решения, по достижению которого происходит останов
# crosspercent - процент популяции, участвующий в скрещивании
# crossprob - вероятность скрещивания
# mutpercent - процент популяц\ции, участвующий в мутации
# mutprob - вероятность мутации
Для каждой из этих cross- и mut-характеристик определены малое, среднее и большое значения.

Если Вы хотите изменить изменить число итераций, вероятность скрещивания/мутации или процент популяции, участвующий в скрещивании или мутации, просто измените этот файл,
а затем также укажите его в нужном поле главного окна программного средства.

------------------------------------------------------------------------------------------------------------------------------

XML-файл с характеристиками системы:

Все надёжности и вероятности определяются двумя числами с постфиксом L или R, поскольку в данной работе надёжность и вероятность определяются, как интервалы.

В директории проекта находится файл example.xml, являющийся примером описания характеристик системы.

Для узла system указаны:
# limitcost - ограничения, накладываемое на стоимость системы, в виде максимально допустимого значения
# costhwrc - стоимость контроллера для систем с возможной реконфигурацией
# qhwrcL и qhwrcR - левая и правая границы интервала надёжности контроллера

Кроме того, система обладает списком модулей. Модули описаны узлами module, для которых в свою очередь указаны:
# num - номер модуля
# qaLL и qallR -  вероятность того, что не произойдёт отказ всех программных компонентов, связанный с ошибкой в спецификации ПО, а значит и в каждой версии.
# qdL и qdR - надёжность голосователя для NVP, теста для RB и контроллера для HWRC.
# qrvL и qrvR - вероятность того, что при отказе одного из программных компонентов не произойдёт связанный с этим отказ другого программного компонента
# hwrczonenum - номер зоны реконфигурирования, в которую входит модуль. В случае необходимости, ПО может быть перенесено на другой модуль с МОО = HWRC/2/0 и таким же hwrczonenum.

Кроме того, модуль обладает списком доступных для использования МОО, где МОО описывается, как:
<tool name="..."/>, где ... = none, nvp01, nvp11, rb11 или hwrc20
И списком компонентов, где компонент описывается, как:
<sw cost="..." num = "..." relL = "..." relR = "..."/>
# sw указывает на то, что это описание программного компонента. Вместо sw в описании компонента может стоять hw, что означает, что компонент аппаратный.
# num - номер компонента в модуле
# relL и relR - надёжность компонента

Аналогично этому файлу можно описать любую другую последовательную систему.